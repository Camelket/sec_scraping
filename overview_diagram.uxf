<diagram program="umletino" version="15.0.0"><zoom_level>8</zoom_level><element><id>UMLClass</id><coordinates><x>112</x><y>616</y><w>128</w><h>64</h></coordinates><panel_attributes>DilutionDB
-
Instantiates DB.
Create, Read Operations
(based on RAW SQL).</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>112</x><y>696</y><w>128</w><h>72</h></coordinates><panel_attributes>DilutionDBUpdater
-
Utiltity for Updates of 
DB Content
and local Files</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>112</x><y>784</y><w>128</w><h>72</h></coordinates><panel_attributes>DilutionDBUtill
-
Helper functions for
DilutionDB and 
DilutionDBUpdater</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLUseCase</id><coordinates><x>184</x><y>456</y><w>88</w><h>32</h></coordinates><panel_attributes>Database
bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLUseCase</id><coordinates><x>392</x><y>624</y><w>88</w><h>32</h></coordinates><panel_attributes>LocalFiles
bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>576</x><y>456</y><w>144</w><h>32</h></coordinates><panel_attributes>orm_mapper.py
-&gt; exports start_mapper()
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>816</x><y>624</y><w>152</w><h>32</h></coordinates><panel_attributes>dilution_db.py
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>816</x><y>368</y><w>104</w><h>32</h></coordinates><panel_attributes>messagebus.py
-&gt; returns bus
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>816</x><y>456</y><w>152</w><h>32</h></coordinates><panel_attributes>bootstrap.py
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>576</x><y>368</y><w>152</w><h>32</h></coordinates><panel_attributes>dilution_db_handlers.py
-&gt; handlers for Commands
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>720</x><y>368</y><w>112</w><h>32</h></coordinates><panel_attributes>lt=&lt;&lt;-
registered in</panel_attributes><additional_attributes>120;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>880</x><y>392</y><w>24</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;80;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>712</x><y>464</y><w>120</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>130;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>960</x><y>464</y><w>200</w><h>192</h></coordinates><panel_attributes>lt=&lt;&lt;-
injects UoW, MessageBus</panel_attributes><additional_attributes>10;220;90;220;90;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>576</x><y>408</y><w>112</w><h>32</h></coordinates><panel_attributes>Commands.py
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Text</id><coordinates><x>816</x><y>496</y><w>184</w><h>104</h></coordinates><panel_attributes>what needs to be injected into dilution_db?
-
1) messagebus
2) a unitOfWork so we can pass it along
3) 
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>Text</id><coordinates><x>1160</x><y>384</y><w>200</w><h>176</h></coordinates><panel_attributes>To do:
-.
*  remove reference to naiv_model.py
*  rework form_values to conform  to domain model
*  add  something so i can send events containing the domain model back to dilution_db
*  finish extraction functions for s-3
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>392</x><y>456</y><w>80</w><h>32</h></coordinates><panel_attributes>Repositiory
(Company)

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>264</x><y>456</y><w>144</w><h>32</h></coordinates><panel_attributes>lt=&lt;.&gt;
&lt;&lt;get/add&gt;&gt;</panel_attributes><additional_attributes>10;20;160;20</additional_attributes></element><element><id>Relation</id><coordinates><x>424</x><y>304</y><w>408</w><h>168</h></coordinates><panel_attributes>lt=&lt;.&gt;
transaction context
</panel_attributes><additional_attributes>10;190;10;20;490;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>816</x><y>304</y><w>104</w><h>32</h></coordinates><panel_attributes>UnitOfWork
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>912</x><y>312</y><w>32</w><h>160</h></coordinates><panel_attributes>lt=&lt;-
</panel_attributes><additional_attributes>20;180;20;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>0</x><y>0</y><w>72</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>70;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>680</x><y>392</y><w>200</w><h>56</h></coordinates><panel_attributes>lt=&lt;&lt;-
get handled by
</panel_attributes><additional_attributes>230;10;180;40;10;40</additional_attributes></element><element><id>Relation</id><coordinates><x>424</x><y>480</y><w>48</w><h>160</h></coordinates><panel_attributes>lt=&lt;&lt;.
reads</panel_attributes><additional_attributes>10;180;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>472</x><y>624</y><w>360</w><h>32</h></coordinates><panel_attributes>lt=&lt;&lt;.
writes</panel_attributes><additional_attributes>10;20;430;20</additional_attributes></element><element><id>Relation</id><coordinates><x>464</x><y>464</y><w>368</w><h>192</h></coordinates><panel_attributes>lt=&lt;&lt;.
adds new content</panel_attributes><additional_attributes>10;10;440;220</additional_attributes></element><element><id>UMLClass</id><coordinates><x>816</x><y>688</y><w>96</w><h>32</h></coordinates><panel_attributes>Parser
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>816</x><y>728</y><w>264</w><h>128</h></coordinates><panel_attributes>Extractor
-
keep to:
	1) extractor functions only emit commands
	    and dont directly modify repo
	2) extractor functions only rely on:
		a) parsed filing
		b) company object
		c) messagebus
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>504</x><y>728</y><w>312</w><h>320</h></coordinates><panel_attributes>How to keep to SRP in extractor:
-.
capabilities needed:
	1) up to date company repo/object
	2) extraction

solutions ?:
	1) have injected handler in uow
	    which handles commands -&gt;
	    only pass commands to uow instead
	    of direct modification.
	    ** Would mean fetch of repo every unit of extraction
	    ** added complexity for easier testing
	2) have handler in MessageBus and pass MessageBus
	    to extractor
	    --&gt; extractor sends events/commands
	    --&gt; MessageBus handler handles those and modifies
		 the Company
	   Issues with this:
			*) how can i get extraction context relevant data?
	3) either 1) or 2) but the command includes the modified 
	    company object and we refetch the company object in
	    each function.
	    -&gt; leads to a lot of boilderplate for fetching
	    -&gt; solves up to date issue and delegates
	        modification to service layer
				

bg=blue</panel_attributes><additional_attributes></additional_attributes></element></diagram>