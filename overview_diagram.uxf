<diagram program="umletino" version="15.0.0"><zoom_level>5</zoom_level><element><id>UMLClass</id><coordinates><x>99</x><y>385</y><w>80</w><h>40</h></coordinates><panel_attributes>DilutionDB
-
Instantiates DB.
Create, Read Operations
(based on RAW SQL).</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>99</x><y>435</y><w>80</w><h>45</h></coordinates><panel_attributes>DilutionDBUpdater
-
Utiltity for Updates of 
DB Content
and local Files</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>99</x><y>490</y><w>80</w><h>45</h></coordinates><panel_attributes>DilutionDBUtill
-
Helper functions for
DilutionDB and 
DilutionDBUpdater</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLUseCase</id><coordinates><x>144</x><y>285</y><w>55</w><h>20</h></coordinates><panel_attributes>Database
bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLUseCase</id><coordinates><x>274</x><y>390</y><w>55</w><h>20</h></coordinates><panel_attributes>LocalFiles
bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>389</x><y>285</y><w>90</w><h>20</h></coordinates><panel_attributes>orm_mapper.py
-&gt; exports start_mapper()
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>539</x><y>390</y><w>95</w><h>20</h></coordinates><panel_attributes>dilution_db.py
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>539</x><y>230</y><w>65</w><h>20</h></coordinates><panel_attributes>messagebus.py
-&gt; returns bus
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>539</x><y>285</y><w>95</w><h>20</h></coordinates><panel_attributes>bootstrap.py
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>389</x><y>230</y><w>95</w><h>20</h></coordinates><panel_attributes>dilution_db_handlers.py
-&gt; handlers for Commands
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>479</x><y>230</y><w>70</w><h>20</h></coordinates><panel_attributes>lt=&lt;&lt;-
registered in</panel_attributes><additional_attributes>120;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>579</x><y>245</y><w>15</w><h>50</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;80;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>474</x><y>290</y><w>75</w><h>15</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>130;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>629</x><y>290</y><w>125</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-
injects UoW, MessageBus</panel_attributes><additional_attributes>10;220;90;220;90;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>389</x><y>255</y><w>70</w><h>20</h></coordinates><panel_attributes>Commands.py
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Text</id><coordinates><x>539</x><y>310</y><w>115</w><h>65</h></coordinates><panel_attributes>what needs to be injected into dilution_db?
-
1) messagebus
2) a unitOfWork so we can pass it along
3) 
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>Text</id><coordinates><x>754</x><y>240</y><w>125</w><h>110</h></coordinates><panel_attributes>To do:
-.
*  remove reference to naiv_model.py
*  rework form_values to conform  to domain model
*  add  something so i can send events containing the domain model back to dilution_db
*  finish extraction functions for s-3
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>274</x><y>285</y><w>50</w><h>20</h></coordinates><panel_attributes>Repositiory
(Company)

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>194</x><y>285</y><w>90</w><h>20</h></coordinates><panel_attributes>lt=&lt;.&gt;
&lt;&lt;get/add&gt;&gt;</panel_attributes><additional_attributes>10;20;160;20</additional_attributes></element><element><id>Relation</id><coordinates><x>294</x><y>190</y><w>255</w><h>105</h></coordinates><panel_attributes>lt=&lt;.&gt;
transaction context
</panel_attributes><additional_attributes>10;190;10;20;490;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>539</x><y>190</y><w>65</w><h>20</h></coordinates><panel_attributes>UnitOfWork
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>599</x><y>195</y><w>20</w><h>100</h></coordinates><panel_attributes>lt=&lt;-
</panel_attributes><additional_attributes>20;180;20;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>29</x><y>0</y><w>45</w><h>15</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>70;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>454</x><y>245</y><w>125</w><h>35</h></coordinates><panel_attributes>lt=&lt;&lt;-
get handled by
</panel_attributes><additional_attributes>230;10;180;40;10;40</additional_attributes></element><element><id>Relation</id><coordinates><x>294</x><y>300</y><w>30</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;.
reads</panel_attributes><additional_attributes>10;180;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>324</x><y>390</y><w>225</w><h>20</h></coordinates><panel_attributes>lt=&lt;&lt;.
writes</panel_attributes><additional_attributes>10;20;430;20</additional_attributes></element><element><id>Relation</id><coordinates><x>319</x><y>290</y><w>230</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;.
adds new content</panel_attributes><additional_attributes>10;10;440;220</additional_attributes></element><element><id>UMLClass</id><coordinates><x>539</x><y>430</y><w>60</w><h>20</h></coordinates><panel_attributes>Parser
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>539</x><y>455</y><w>165</w><h>80</h></coordinates><panel_attributes>Extractor
-
keep to:
	1) extractor functions only emit commands
	    and dont directly modify repo
	2) extractor functions only rely on:
		a) parsed filing
		b) company object
		c) messagebus
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>344</x><y>455</y><w>195</w><h>240</h></coordinates><panel_attributes>How to keep to SRP in extractor:
-.
capabilities needed:
	1) up to date company repo/object
	2) extraction

solutions ?:
	1) have injected handler in uow
	    which handles commands -&gt;
	    only pass commands to uow instead
	    of direct modification.
	    ** Would mean fetch of repo every unit of extraction
	    ** added complexity for easier testing
	2) have handler in MessageBus and pass MessageBus
	    to extractor
	    --&gt; extractor sends events/commands
	    --&gt; MessageBus handler handles those and modifies
		 the Company
	   Issues with this:
			*) how can i get extraction context relevant data?
	3) either 1) or 2) but the command includes the modified 
	    company object and we refetch the company object in
	    each function.
	    -&gt; leads to a lot of boilderplate for fetching
	    -&gt; solves up to date issue and delegates
	        modification to service layer
	4) pass company to extraction functions and commit at end
	of complete extraction -&gt; command.UpdateCompany()
				

bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>539</x><y>535</y><w>165</w><h>160</h></coordinates><panel_attributes>Despite violating SRP in the 
extractor functions, isnt it the only 
logical and straight forward way to do it?

1) either only modify the company object
 and commit on return of extraction 
OR
2) modify the company per commands 
in the indiviudal extraction functions 
while also changing the local company object?
OR
3) ? what is an option besides sending 
commands and keeping a local company object
around ? 
--&gt; update at end of extraction, which isnt an option
	as one mistake in extraction would not commit
	anything.
--&gt; 
bg=blue
</panel_attributes><additional_attributes></additional_attributes></element></diagram>